const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const bodyParser = require('body-parser');
const app = express();
const port = 3000;

const db = new sqlite3.Database('lojaDB.sqlite');

app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE');
    res.header('Access-Control-Allow-Headers', 'Content-Type');
    next();
});

app.use(express.static('public'));

app.use(bodyParser.json());

// Obter dados da tabela Cliente
app.get('/getDataCliente', (req, res) => {
    db.all('SELECT * FROM cliente', (err, rows) => {
        if(err) {
            res.status(500).send('Erro ao obter dados do banco de dados.');
        } else {
            const data = rows;
            res.json(data);
        }
    });
});

// Cadastrar Cliente
app.post('/cadastrar_cliente', (req, res) => {
    const { nome, genero, celular } = req.body;

    db.run('INSERT INTO cliente (nome, genero, celular) VALUES (?, ?, ?)', [nome, genero, celular], function (err) {
        if(err) {
            return res.status(500).json({ error: err.message });
        }

        // ID do Cliente
        const clienteID = this.lastID;

        res.status(201).json({ id: clienteID, nome, genero, celular });
    });
});

// Deletar Cliente
app.delete('/deletar_cliente/:id', (req, res) => {
    const clienteID = req.params.id;
    const sql = 'DELETE FROM cliente WHERE idCliente = ?';
    db.run(sql, [clienteID], function(err) {
        if(err){
            return res.status(500).json({ error: err.message });
        }
        res.json({ message: 'Cliente deletado.' });
    });
});

// Atualizar Cliente
app.put('/atualizar_cliente/:id', (req, res) => {
    const IDcliente = req.params.id;
    const novo_numero = req.body.novo_numero;

    const sql = 'UPDATE cliente SET celular = ? WHERE idCliente = ?';
    db.run(sql, [novo_numero, IDcliente], function (err) {
        if(err) {
            return res.status(500).json({ error: err.message });
        }
        res.json({ message: 'Cliente Atualizado' });
    });
});

app.listen(port, () => {
    console.log(`Servidor est√° ouvindo na porta ${port}`);
});